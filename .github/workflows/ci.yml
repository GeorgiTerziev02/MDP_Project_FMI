name: ci

on:
  pull_request:
    branches: [ "main" ]

jobs:
  editorconfig:
    name: Check editorconfig
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: editorconfig-checker/action-editorconfig-checker@main
    - run: editorconfig-checker

  markdown:
    name: Check markdown
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Lint Markdown files
        uses: davidanson/markdownlint-cli2-action@v3

  flake8:
    name: Flake8
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: flake8 Lint
        uses: py-actions/flake8@v2

  check-secrets:
    name: Check for leaked secrets
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-test:
    name: Build and test
    runs-on: ubuntu-latest
    needs: [ flake8, markdown, editorconfig, check-secrets ]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        pip install pytest
        pip install -r src/requirements.txt;
    - name: Test with pytest
      run: pytest

  database-test:
    name: Database migration
    needs: [build-and-test]
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: db
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - uses: joshuaavalon/flyway-action@v3.0.0
        with:
          url: jdbc:postgresql://postgres:5432/db
          user: user
          password: password

  sonarqube:
    name: SonarQube validation
    runs-on: ubuntu-latest
    needs: [ build-and-test ]
    steps:
    - uses: actions/checkout@v4
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  snyk:
    runs-on: ubuntu-latest
    needs: [database-test, sonarqube]
    steps:
      - uses: actions/checkout@v4
      # this is second time try to fix
      - name: Install Dependencies
        run: pip install -r src/requirements.txt
      - name: Install node
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Install Snyk
        run: npm install -g snyk
      - name: Test with snyk
        run: npx snyk test --file="./src/requirements.txt"
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
